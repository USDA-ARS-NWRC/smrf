# This workflow publish a new release to Pypi after it's built using CIBuildWheel

name: Release to Pypi

# Run on a published release and push to Pypi
on: 
  release: 
    types: [published]

jobs:

  build_wheels_linux:
    name: Build wheel ${{ matrix.cibw }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        cibw: [cp36-manylinux_x86_64, cp37-manylinux_x86_64, cp38-manylinux_x86_64, cp39-manylinux_x86_64]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build wheels
        uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_TEST_REQUIRES: nose
          CIBW_TEST_COMMAND: "NOT_ON_GOLD_HOST=yup nosetests -vv --exe smrf"
          CIBW_TEST_EXTRAS: tests
          CIBW_BUILD: "${{ matrix.cibw }}"
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BEFORE_BUILD_LINUX: "{package}/.github/cibuildwheel_before_build_linux.sh"
          CIBW_ENVIRONMENT: "NOT_ON_GOLD_HOST=yup"

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_wheels_macos:
    name: Build wheel ${{ matrix.cibw }}
    runs-on: macos-10.15
    strategy:
      matrix:
        cibw: [cp36-macosx_x86_64, cp37-macosx_x86_64, cp38-macosx_x86_64, cp39-macosx_x86_64]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build wheels
        uses: joerick/cibuildwheel@v1.10.0
        env:
          CIBW_TEST_REQUIRES: nose
          CIBW_TEST_COMMAND: "NOT_ON_GOLD_HOST=yup nosetests -vv --exe smrf"
          CIBW_TEST_EXTRAS: tests
          CIBW_BUILD: "${{ matrix.cibw }}"
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BEFORE_BUILD_MACOS: "{package}/.github/cibuildwheel_before_build_macos.sh"
          CIBW_ENVIRONMENT_MACOS: "NOT_ON_GOLD_HOST=yup CC=gcc-9"

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_dist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip wheel
          python3 -m pip install -r requirements.txt

      - name: Build dist
        run: python setup.py sdist --formats=gztar

      - name: Build wheel
        run: python3 setup.py bdist_wheel

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_dist, build_wheels_linux, build_wheels_macos]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    # if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          # To test: repository_url: https://test.pypi.org/legacy/