#
#
# For general details on syntax, see:
# https://inicheck.readthedocs.io/en/latest/master_config.html
#
# Section and keys are case insensitive.
#
# NOTES:
#  1. All the entries under the item are optional.
#  2. If no type is specified str is assumed.
#  3. If no description or default is provided None is assumed.
#
#
# 20190912 Micah Johnson
#
################################################################################
# Configurations for TOPO section
################################################################################

[topo]

filename:
type = CriticalFilename,
description = A netCDF file containing all veg info and dem.

gradient_method:
default = gradient_d8,
options = [gradient_d8 gradient_d4],
type = string,
description = Method to use for calculating the slope and aspect. gradient_d8 uses 3 by 3 finite
difference window and gradient_d4 uses a two cell finite difference for x and y

sky_view_factor_angles:
default = 72,
type = int,
description = Number of directions to estimate the horizon. Divides 360 degrees into evenly spaced
directions.

northern_hemisphere:
default = True,
type = bool,
description = Boolean describing whether the model domain is in the northern hemisphere or not

################################################################################
# Configuration for TIME section
################################################################################

[time]

time_step:
default = 60,
type = int,
description = Time interval that SMRF distributes data at in minutes

start_date:
type = DatetimeOrderedPair,
description = Date and time to start the data distribution that can be parsed by pandas.to_datetime

end_date:
type = DatetimeOrderedPair,
description = Date and time to end the data distribution that can be parsed by pandas.to_datetime

time_zone:
default = UTC,
type = RawString,
description =  Case sensitive time zone for all times provided and how the model will be run. See
                pytz docs for information on what is accepted. Full list can be found 
                en.wikipedia.org/wiki/List_of_tz_database_time_zones

################################################################################
# CSV section configurations
################################################################################

[csv]
stations:
type = station list,
description = List of station IDs to use for distributing any of the variables

metadata:
type = CriticalFilename,
description = Path to CSV containing the station metadata

air_temp:
type = CriticalFilename,
description = Path to CSV containing the station measured air temperature

vapor_pressure:
type = CriticalFilename,
description = Path to CSV containing the station measured vapor pressure

precip:
type = CriticalFilename,
description = Path to CSV containing the station measured precipitation

wind_speed:
type = CriticalFilename,
description = Path to CSV containing the station measured wind speed

wind_direction:
type = CriticalFilename,
description = Path to CSV containing the station measured wind direction

cloud_factor:
type = CriticalFilename,
description = Path to CSV containing the station measured cloud factor


################################################################################
# Gridded datasets configurations
################################################################################

[gridded]

data_type:
default = hrrr_grib,
options = [wrf hrrr_grib netcdf],
description = Type of gridded input data

hrrr_forecast_flag:
default = False,
type = bool,
description = True if the HRRR data is a forecast

hrrr_directory:
default = None,
type = CriticalDirectory,
description = Path to the top level directory where multiple HRRR gridded dataset are located

hrrr_load_method:
default = first,
options = [first timestep],
description = Method to load the HRRR data either load all data first or for each timestep

wrf_file:
type =  CriticalFilename,
description = Path to the netCDF file containing WRF data

netcdf_file:
type =  CriticalFilename,
description = Path to the netCDF file containing weather data


################################################################################
# air temp distribution configuration
################################################################################
# If the ‘stations’ key is set only those stations will be used, else all
# possible stations will be used

[air_temp]
distribution:
default = idw,
options = [dk idw grid kriging],
description = Distribution method to use for <this variable>. Stations use dk
              idw or kriging. Gridded data use grid. Stations use dk idw or
              kriging. Gridded data use grid.

detrend:
default = true,
type = bool,
description = Whether to elevationally detrend prior to distributing

detrend_slope:
default = -1,
options = [-1 0 1],
type = int,
description = If detrend is true constrain the detrend_slope to positive (1) or
              negative (-1) or no constraint (0)

stations:
type = station list,
description = Stations to use for distributing air temperature

max:
default = 47.0,
type = float,
description = Maximum possible value for air temperature in Celsius

min:
default = -73.0,
type = float,
description = Minimum possible value for air temperature in Celsius

grid_mask:
default = True,
type = bool,
description = Mask the distribution calculations

grid_method:
default = cubic,
options = [nearest linear cubic],
description = Gridded interpolation method to use for air temperature

idw_power:
default = 2.0,
type = float,
description = Power for decay of a stations influence in inverse distance
              weighting.

dk_ncores:
default = 1,
type = int,
description = Number of threads or processors to use in the dk calculation

grid_local:
default = False,
type = bool,
description = Use local elevation gradients in gridded interpolation

grid_local_n:
default = 25,
type = int,
description = number of closest grid cells to use for calculating elevation gradient

krig_variogram_model:
default = linear,
options = [linear power gaussian spherical exponential hole-effect],
description = Specifies which kriging variogram model to use

krig_nlags:
default = 6,
type = int,
description = Number of averaging bins for the kriging semivariogram

krig_weight:
default = False,
type = bool,
description = Flag that specifies if the kriging semivariance at smaller lags
              should be weighted more heavily when automatically calculating
              variogram model.

krig_anisotropy_scaling:
default = 1.0,
type = float,
description = Scalar stretching value for kriging to take into account
              anisotropy.

krig_anisotropy_angle:
default = 0.0,
type = float,
description = CCW angle (in degrees) by which to rotate coordinate system in
				order to take into account anisotropy.

krig_coordinates_type:
default = euclidean,
options = [euclidean geographic],
description = Determines if the x and y coordinates are interpreted as on a
				plane (euclidean) or as coordinates on a sphere (geographic).



################################################################################
# vapor_pressure distribution
################################################################################

[vapor_pressure]

distribution:
default = idw,
options = [dk idw grid kriging],
description = Distribution method to use for vapor pressure. Stations use dk
              idw or kriging. Gridded data use grid.

detrend:
default = true,
type = bool,
description = Whether to elevationally detrend prior to distributing

detrend_slope:
default = -1,
options = [-1 0 1],
type = int,
description = If detrend is true constrain the slope to positive (1) or
              negative (-1) or no constraint (0)

stations:
type = station list,
description = Stations to use for distributing vapor pressure in Pascals

max:
default = 5000.0,
type = float,
description = Maximum possible vapor pressure in Pascals

min:
default = 20.0,
type = float,
description = Minimum possible vapor pressure in Pascals

grid_mask:
default = True,
type = bool,
description = Mask the distribution calculations

grid_method:
default = cubic,
options = [nearest linear cubic],
description = interpolation method to use for this variable

idw_power:
default = 2.0,
type = float,
description = Power for decay of a stations influence in inverse distance
              weighting

dk_ncores:
default = 1,
type = int,
description = Number of threads to use in the dk calculation

dew_point_nthreads:
default = 2,
type = int,
description = Number of threads to use in the dew point calculation

dew_point_tolerance:
default = 0.01,
type = float,
description = Solving criteria for the dew point calculation

grid_local:
default = False,
type = bool,
description = Use local elevation gradients in gridded interpolation

grid_local_n:
default = 25,
type = int,
description = number of closest grid cells to use for calculating elevation
              gradient

krig_variogram_model:
default = linear,
options = [linear power gaussian spherical exponential hole-effect],
description = Specifies which kriging variogram model to use

krig_nlags:
default = 6,
type = int,
description = Number of averaging bins for the kriging semivariogram

krig_weight:
default = False,
type = bool,
description = Flag that specifies if the kriging semivariance at smaller lags
              should be weighted more heavily when automatically calculating
              variogram model.

krig_anisotropy_scaling:
default = 1.0,
type = float,
description = Scalar stretching value for kriging
              to take into account anisotropy.

krig_anisotropy_angle:
default = 0.0,
type = float,
description = CCW angle (in degrees) by which to rotate coordinate system in
              order to take into account anisotropy.

krig_coordinates_type:
default = euclidean,
options = [euclidean geographic],
description = Determines if the x and y coordinates are interpreted as on a
              plane (euclidean) or as coordinates on a sphere (geographic).

################################################################################
# wind_speed and wind_direction distribution
################################################################################

[wind]

wind_model:
default = winstral,
options = [winstral wind_ninja interp],
description = Wind model to interpolate wind measurements to the model domain

distribution:
default = idw,
options = [dk idw grid kriging],
description = Distribution method to use for wind. Stations use dk idw or
              kriging. Gridded data use grid.

detrend:
default = False,
type = bool,
description = Whether to elevationally detrend prior to distributing

detrend_slope:
default = 1,
options = [-1 0 1],
type = int,
description = if detrend is true constrain the detrend_slope to positive (1) or
              negative (-1) or no constraint (0)

stations:
type = station list,
description = Stations to use for distributing wind in M/s

max:
default = 35.0,
type = float,
description = Maximum possible wind in M/s

min:
default = 0.447,
type = float,
description = Minimum possible for wind in M/s

grid_mask:
default = True,
type = bool,
description = Mask the distribution calculations

grid_method:
default = linear,
options = [nearest linear cubic],
description = interpolation method to use for wind

idw_power:
default = 2.0,
type = float,
description = Power for decay of a stations influence in inverse distance
              weighting

dk_ncores:
default = 2,
type = int,
description = Number of threads to use in the dk calculation

station_peak:
type = station list,
description = Name of stations that lie on a peak or a high point

station_default:
default = 11.4,
type = float,
description = Account for sheltered station wind measurements for example 11.4
              equates to a small forest opening and 0 equates to unsheltered
              measurements.
veg_default:
default = 0.0,
type = float,
description = Applies the value to all vegetation not specified

veg_41:
default = 3.3,
type = float,
description = Applies the value where vegetation type equals NLCD class 41

veg_42:
default = 3.3,
type = float,
description = Applies the value where vegetation type equals NLCD class 42

veg_43:
default = 11.4,
type = float,
description = Applies the value where vegetation type equals NLCD class 43

veg_3011:
default = 3.3,
type = float,
description = Applies the value where vegetation equals 3011(Rocky Mountain
              aspen)

veg_3061:
default = 3.3,
type = float,
description = Applies the value where vegetation equals 3061(mixed aspen)

reduction_factor:
default = 1.0,
type = float,
description = If wind speeds are still off here is a scaling factor

maxus_netcdf:
type = CriticalFilename,
description = NetCDF file containing the maxus values for wind

krig_variogram_model:
default = linear,
options = [linear power gaussian spherical exponential hole-effect],
description = Specifies which kriging variogram model to use

krig_nlags:
default = 6,
type = int,
description = Number of averaging bins for the kriging semivariogram

krig_weight:
default = False,
type = bool,
description = Flag that specifies if the kriging semivariance at smaller lags
              should be weighted more heavily when automatically calculating
              variogram model.

krig_anisotropy_scaling:
default = 1.0,
type = float,
description = Scalar stretching value for kriging to take into account
              anisotropy.

krig_anisotropy_angle:
default = 0.0,
type = float,
description = CCW angle (in degrees) by which to rotate coordinate system in
              order to take into account anisotropy.

krig_coordinates_type:
default = euclidean,
options = [euclidean geographic],
description = Determines if the x and y coordinates are interpreted as on a
              plane (euclidean) or as coordinates on a sphere (geographic).

grid_local:	default = False,
type = bool,
description = Use local elevation gradients in gridded interpolation

grid_local_n:	default = 25,
type = int,
description = Number of closest grid cells to use for calculating elevation gradient

wind_ninja_dir:
type = CriticalDirectory,
description = Location in which the ascii files are output from the WindNinja
              simulation. This serves as a trigger for checking for WindNinja
              files.

wind_ninja_dxdy:
default = 100,
type = int,
description = grid spacing at which the WindNinja ascii files are output.

wind_ninja_pref:
description = Prefix of all outputs from WindNinja that matches the topo input
              to WindNinja.

wind_ninja_tz:
default = UTC,
description = Time zone that from the WindNinja config.

wind_ninja_roughness:
default = 0.01,
description = The surface roughness used in WindNinja generally grass.

wind_ninja_height:
default = 5.0,
description = The output height of wind fields from WindNinja in meters.


################################################################################
# precipitation
################################################################################

[precip]

stations:
type = station list,
description = Stations to use for distributing this precipitation

distribution:
default = dk,
options = [dk idw grid kriging],
description = Distribution method to use for precipitation. Stations use dk idw
              or kriging. Gridded data use grid.

detrend:
default = true,
type = bool,
description = Whether to elevationally detrend prior to distributing

detrend_slope:
default = 1,
options = [-1 0 1],
type = int,
description = if detrend is true constrain the detrend_slope to positive (1) or
              negative (-1) or no constraint (0)

max:
default = None,
type = float,
description = Maximum possible precipitation in millimeters

min:
default = 0.0,
type = float,
description = Minimum possible for precipitation in millimeters

grid_mask:
default = True,
type = bool,
description = Mask the distribution calculations

grid_method:
default = cubic,
options = [nearest linear cubic],
description = interpolation method to use for precipitation

grid_local:	default = False,
type = bool,
description = Use local elevation gradients in gridded interpolation

grid_local_n:
default = 25,
type = int,
description = number of closest grid cells to use for calculating elevation gradient

idw_power:
default = 2.0,
type = float,
description = Power for decay of a stations influence in inverse distance weighting

dk_ncores:
default = 2,
type = int,
description = Number of threads to use in the dk calculation

storm_mass_threshold:
default = 1.0,
type = float,
description = Start criteria for a storm in mm of measured precipitation in
              millimeters in any pixel over the domain.

# TODO CHANGE TO HOURS INSTEAD OF TIMESTEPS #99
marks2017_timesteps_to_end_storms:
default = 6,
type = int,
description = number of timesteps to elapse with precip under start criteria
              before ending a storm.

susong1999_timesteps_to_end_storms:
default = 6,
type = int,
description = number of timesteps to elapse with precip under start criteria
              before ending a storm.

new_snow_density_model:
default = susong1999,
options = [marks2017 susong1999 piecewise_susong1999],
description = Method to use for calculating the new snow density

storm_days_restart:
type = DiscretionaryCriticalFilename,
description = Path to netcdf representing the last storm days so a run can
              continue in between stops

station_adjust_for_undercatch:
default = true,
type = bool,
description = Apply undercatch relationships to precip gauges

station_undercatch_model_default:
default = us_nws_8_shielded,
options = [us_nws_8_shielded us_nws_8_unshielded],
description = WMO model used to adjust for undercatch of precipitaiton

krig_variogram_model:
default = linear,
options = [linear power gaussian spherical exponential hole-effect],
description = Specifies which kriging variogram model to use

krig_nlags:
default = 6,
type = int,
description = Number of averaging bins for the kriging semivariogram

krig_weight:
default = False,
type = bool,
description = Flag that specifies if the kriging semivariance at smaller lags
              should be weighted more heavily when automatically calculating
              variogram model.

krig_anisotropy_scaling:
default = 1.0,
type = float,
description = Scalar stretching value for kriging to take into account anisotropy.

krig_anisotropy_angle:
default = 0.0,
type = float,
description = CCW angle (in degrees) by which to rotate coordinate system in
              order to take into account anisotropy.

krig_coordinates_type:
default = euclidean,
options = [euclidean geographic],
description = Determines if the x and y coordinates are interpreted as on a
              plane (euclidean) or as coordinates on a sphere (geographic).

precip_temp_method:
default = dew_point,
options = [dew_point wet_bulb],
description = which variable to use for precip temperature

precip_rescaling_model:
default = None,
options = [winstral],
description = Method to use for redistributing precipitation. Winstrals method
              focuses forming drifts from wind

winstral_tbreak_netcdf:
default = None,
type = Filename,
description = NetCDF file containing the tbreak values for wind

winstral_veg_default:
default = 1.0,
type = float,
description = Applies the value to all vegetation not specified

winstral_veg_41:
default = 0.7,
type = float,
description = Interference inverse factor for precip redistribution where
              vegetation equals 41.

winstral_veg_42:
default = 0.7,
type = float,
description = Interference inverse factor for precip redistribution where
              vegetation equals 42.

winstral_veg_43:
default = 0.7,
type = float,
description = Interference inverse factor for precip redistribution where
              vegetation equals 43.

winstral_veg_3011:
default = 0.7,
type = float,
description = Interference inverse factor for precip redistribution where
              vegetation equals 3011(Rocky Mountain Aspen).

winstral_veg_3061:
default = 0.7,
type = float,
description = Interference inverse factor for precip redistribution where
              vegetation equals 3061(Mixed Aspen).

winstral_tbreak_threshold:
default = 7.0,
type = float,
description = Threshold for drift cells measured in degrees from tbreak file.

winstral_min_scour:
default = 0.55,
type = float,
description = minimum multiplier for precip redistribution to account for wind
              scour.

winstral_max_scour:
default = 1.0,
type = float,
description = max multiplier for precip redistribution to account for wind
              scour.

winstral_min_drift:
default = 1.0,
type = float,
description = min multiplier for precip redistribution in a drift cell

winstral_max_drift:
default = 3.5,
type = float,
description = max multiplier for precip redistribution in a drift cell

################################################################################
# albedo configurations
################################################################################
[albedo]

max:
default = 1.0,
type = float,
description = Maximum possible for albedo

min:
default = 0.0,
type = float,
description = Minimum possible for albedo

grid_mask:
default = True,
type = bool,
description = Mask the distribution calculations

# TODO make grain size a model selection, see #103
grain_size:
default = 100.0,
type = float,
description = Effective optical grain radius of snow after last storm in
              micro-meters

max_grain:
default = 700.0,
type = float,
description = Max optical grain radius of snow possible in micro-meters

dirt:
default = 2.0,
type = float,
description = Effective contamination for adjustment to visible albedo (usually
              between 1.5-3.0)

decay_method:
default = None,
options = [ hardy2000 date_method None],
description = Describe how the albedo decays in the late season

date_method_start_decay:
default = None,
type = DatetimeOrderedPair,
description = Starting date for applying the decay method described by
              date_method

date_method_end_decay:
default = None,
type = DatetimeOrderedPair,
description = Starting date for applying the decay method described by
              date_method

date_method_decay_power:
default = 0.714,
type = float,
description = Exponent value of the decay rate equation prescribed by the method.

date_method_veg_default:
default = 0.25,
type = float,
description = Applies the value to all vegetation not specified

date_method_veg_41:
default = 0.36,
type = float,
description = Applies the value where vegetation equals 41

date_method_veg_42:
default = 0.36,
type = float,
description = Applies the value where vegetation equals 42

date_method_veg_43:
default = 0.25,
type = float,
description = Applies the value where vegetation equals 43

hardy2000_litter_albedo:
default = 0.2,
type = float,
description = Albedo of the litter on the snow using the hard method

hardy2000_litter_default:
default = 0.003,
type = float,
description = Litter rate for places where vegetation not specified for Hardy
              et al. 2000 decay method

hardy2000_litter_veg_41:
default = 0.006,
type = float,
description = Litter rate for places where vegetation not specified for Hardy
              et al. 2000 decay method for vegetation classes NLCD 41
hardy2000_litter_veg_42:
default = 0.006,
type = float,
description = Litter rate for places where vegetation not specified for Hardy
         et al. 2000 decay method for vegetation classes NLCD 42

hardy2000_litter_veg_43:
default = 0.003,
type = float,
description = Litter rate for places where vegetation not specified for Hardy
              et al. 2000 decay method for vegetation classes NLCD 43


################################################################################
# Cloud Factor - Fraction used to limit solar radiation Cloudy (0) - Sunny (1)
################################################################################
[cloud_factor]

distribution:
default = idw,
options = [dk idw grid kriging],
description = Distribution method to use for cloud factor. Stations use dk
              idw or kriging. Gridded data use grid. Stations use dk idw or
              kriging. Gridded data use grid.

detrend:
default = false,
type = bool,
description = Whether to elevationally detrend prior to distributing

detrend_slope:
default = 0,
options = [-1 0 1],
type = int,
description = If detrend is true constrain the detrend_slope to positive (1) or
              negative (-1) or no constraint (0)

stations:
type = station list,
description = Stations to use for distributing cloud factor as a decimal
              representing full clouds (0) to full sun (1).

max:
default = 1.0,
type = float,
description = Max prossible cloud factor as a decimal representing full clouds
              (0) to full sun (1).

min:
default = 0.0,
type = float,
description = Minimum possible cloud factor as a decimal representing full
              clouds (0) to full sun (1).

grid_mask:
default = True,
type = bool,
description = Mask the distribution calculations

grid_method:
default = cubic,
options = [nearest linear cubic],
description = Gridded interpolation method to use for cloud factor

idw_power:
default = 2.0,
type = float,
description = Power for decay of a stations influence in inverse distance
              weighting.

dk_ncores:
default = 1,
type = int,
description = Number of threads or processors to use in the dk calculation

grid_local:
default = False,
type = bool,
description = Use local elevation gradients in gridded interpolation

grid_local_n:
default = 25,
type = int,
description = number of closest grid cells to use for calculating elevation gradient

krig_variogram_model:
default = linear,
options = [linear power gaussian spherical exponential hole-effect],
description = Specifies which kriging variogram model to use

krig_nlags:
default = 6,
type = int,
description = Number of averaging bins for the kriging semivariogram

krig_weight:
default = False,
type = bool,
description = Flag that specifies if the kriging semivariance at smaller lags
              should be weighted more heavily when automatically calculating
              variogram model.

krig_anisotropy_scaling:
default = 1.0,
type = float,
description = Scalar stretching value for kriging to take into account
              anisotropy.

krig_anisotropy_angle:
default = 0.0,
type = float,
description = CCW angle (in degrees) by which to rotate coordinate system in
              order to take into account anisotropy.

krig_coordinates_type:
default = euclidean,
options = [euclidean geographic],
description = Determines if the x and y coordinates are interpreted as on a
              plane (euclidean) or as coordinates on a sphere (geographic).


################################################################################
# solar
################################################################################

[solar]

max:
default = 800.0,
type = float,
description = Maximum possible solar radiation in W/m^2

min:
default = 0.0,
type = float,
description = Minimum possible solar radiation in W/m^2

clear_opt_depth:
default = 100.0,
type = float,
description = Elevation of optical depth measurement

clear_tau:
default = 0.2,
type = float,
description = Optical depth at z

clear_omega:
default = 0.85,
type = float,
description = Single-scattering albedo

clear_gamma:
default = 0.3,
type = float,
description = Scattering asymmetry parameter

correct_veg:
default = true,
type = bool,
description = Apply solar radiation corrections according to veg_type

correct_albedo:
default = true,
type = bool,
description = Multiply the solar radiation by 1-snow_albedo.

correct_cloud:
default = true,
type = bool,
description = Multiply the solar radiation by the cloud factor derived by
              station data.

################################################################################
# thermal
################################################################################

[thermal]

distribution:
default = grid,
options = [grid],
description = Distribution method to use for incoming thermal when using HRRR input data.

detrend:
default = False,
type = bool,
description = Whether to elevationally the detrend prior to distributing

detrend_slope:
default = 0,
options = [-1 0 1],
type = int,
description = if detrend is true constrain the detrend_slope to positive (1) or negative (-1) or no constraint (0)

grid_method:
default = cubic,
options = [nearest linear cubic],
description = interpolation method to use for this variable

max:
default = 600.0,
type = float,
description = Maximum possible incoming thermal radiation in W/m^2

min:
default = 0.0,
type = float,
description = Minimum possible incoming thermal radiation in W/m^2

grid_mask:
default = True,
type = bool,
description = Mask the thermal radiation calculations

clear_sky_method:
default = marks1979,
options = [marks1979 dilley1998 prata1996 angstrom1918],
description = Method for calculating the clear sky thermal radiation

cloud_method:
default = garen2005,
options = [garen2005 unsworth1975 kimball1982 crawford1999],
description = Method for adjusting thermal radiation due to cloud effects

marks1979_nthreads:
default = 2,
type = int,
description = Number of threads to use thermal radiation calcs when using Marks1979

correct_cloud:  default = true,
type = bool,
description = Specify whether to use the cloud adjustments in thermal calculation

correct_veg:
default = true,
type = bool,
description = Specify whether to account for vegetation in the thermal calculations

correct_terrain:
default = true,
type = bool,
description = Specify whether to account for vegetation in the thermal calculations

grid_local:
default = False,
type = bool,
description = Use local elevation gradients in gridded interpolation

grid_local_n:
default = 25,
type = int,
description = number of closest grid cells to use for calculating elevation gradient

################################################################################
# soil temperature
################################################################################

[soil_temp]

temp:
default = -2.5,
type = float,
description = Constant value to use for the soil temperature.

################################################################################
# output variables
################################################################################

[output]

frequency:
default = 1,
type = int,
description = Number of timesteps between output values. 1 is every timestep.

out_location:
default = None,
type = Directory,
description = Directory to output results

variables:
default = [thermal air_temp vapor_pressure wind_speed
                          wind_direction net_solar precip percent_snow
                          snow_density precip_temp],
options = [all air_temp albedo_vis albedo_ir precip percent_snow
           snow_density storm_days precip_temp
           clear_ir_beam clear_ir_diffuse clear_vis_beam
           clear_vis_diffuse cloud_factor cloud_ir_beam
           cloud_ir_diffuse cloud_vis_beam cloud_vis_diffuse net_solar
           veg_ir_beam veg_ir_diffuse veg_vis_beam veg_vis_diffuse
           thermal vapor_pressure dew_point flatwind wind_speed
           wind_direction thermal_clear thermal_veg thermal_cloud],
type = string list,
description = Variables to output after being calculated.

mask_output:
default = False,
type = bool,
description = Mask the final NetCDF output.

# TODO add back in the HRU for prms (#117)
file_type:
default = netcdf,
options = [netcdf],
description = Format to use for outputting data.

input_backup:  default = true,
type = bool,
description = Specify whether to backup the input data and create config file
              to run the smrf run from that backup

################################################################################
# system variables
################################################################################

[system]

time_out:
default = None,
type = float,
description = Amount of time to wait for a thread before timing out

threading:
default = true,
type = bool,
description = Specify whether to use python threading in calculations.

queue_max_values:
default = 2,
type = int,
description = How many timesteps that a calculation can get ahead
						  while threading if it is independent of other variables.

log_level:
default = debug,
options = [debug info error],
description = level of information to be logged

log_file:
default = None,
type = filename,
description = File path to a txt file for the log info to be outputted

qotw:
default = false,
type = bool
