
################################################################################
# Recipes
################################################################################

#TOPO RECIPES
[topo_basic_recipe]
trigger:
  has_section = topo

topo:
  apply_defaults = True

# TIME RECIPES
[time_recipe]
trigger_section:
  has_section = time

time:
  apply_defaults = True


# AIR TEMP
[air_temp_recipe]
trigger_section:
  has_section = air_temp

air_temp:
  apply_defaults = True

# VAPOR PRESSURE
[vp_recipe]
trigger_section:
    has_section = vapor_pressure
vapor_pressure:
    apply_defaults = True

# WIND
[wind_recipe]
trigger_section:
  has_section = wind

wind:
  apply_defaults = True

[wind_ninja_recipe]
trigger:
  has_value = [wind wind_model wind_ninja]

wind:
  remove_item = [detrend detrend_slope
                station_peak station_default veg_default veg_41
                veg_42 veg_43 veg_3011 veg_3061 reduction_factor
                grid_local grid_local_n grid_mask]

[wind_interp_recipe]
trigger:
  has_value = [wind wind_model interp]

wind:
  remove_item = [maxus_netcdf station_peak station_default veg_default veg_41
                veg_42 veg_43 veg_3011 veg_3061 reduction_factor]

# PRECIP RECIPES
[precip_recipe]
trigger_section:
  has_section = precip

precip:
  apply_defaults = True

[undercatch_recipe]
trigger_item:
  has_value = [precip station_adjust_for_undercatch False]

precip:
  remove_item = station_undercatch_model_default

[non_winstral_recipe]
trigger:
  has_value = [precip precip_rescaling_model None]

precip:
remove_item = [winstral_tbreak_netcdf winstral_veg_default winstral_veg_41
               winstral_veg_42 winstral_veg_43 winstral_veg_3061
               winstral_tbreak_threshold winstral_min_scour winstral_max_scour
               winstral_min_drift winstral_max_drift]

[cloud_factor_recipe]
trigger:
  has_section = cloud_factor

cloud_factor:
  apply_defaults = True


# SOLAR RECIPES
[albedo_recipe]
trigger_section:
  has_section = albedo

albedo:
  apply_defaults = True

[no_decay_method_recipe]
trigger:
  has_value = [albedo decay_method None]

albedo:
  remove_item = [date_method_start_decay date_method_end_decay
                 date_method_decay_power date_method_veg_default
                 date_method_veg_41 date_method_veg_42 date_method_veg_43
                 hardy2000_litter_albedo hardy2000_litter_default
                 hardy2000_litter_veg_41 hardy2000_litter_veg_42 hardy2000_litter_veg_43]

[date_decay_method_recipe]
trigger:
  has_value = [albedo decay_method date_method]

albedo:
  remove_item = [hardy2000_litter_albedo hardy2000_litter_default
                hardy2000_litter_veg_41 hardy2000_litter_veg_42 hardy2000_litter_veg_43]

[hardy_decay_method_recipe]
trigger:
  has_value = [albedo decay_method hardy2000]

albedo:
  remove_item = [date_method_start_decay date_method_end_decay
                 date_method_decay_power date_method_veg_default
                 date_method_veg_41 date_method_veg_42 date_method_veg_43]

# SOLAR RECIPES
[solar_recipe]
trigger_section:
  has_section = solar

solar:
  apply_defaults = True

# THERMAL RECIPES
[thermal_recipe]
trigger_section:
  has_section = thermal

thermal:
  apply_defaults = True

[thermal_distribution_recipe]
trigger:
  has_value = [gridded data_type netcdf]

thermal:
  remove_item = distribution


[thermal_clear_sky_recipe]
trigger_dilley:
  has_value = [thermal clear_sky_method dilley1998]

trigger_prata:
  has_value = [thermal clear_sky_method prata1996]

trigger_angstrom:
  has_value = [thermal clear_sky_method angstrom1918]

thermal:
  remove_item = marks1979_nthreads

[thermal_cloud_correct_recipe]
trigger:
  has_value = [thermal correct_cloud False]

thermal:
  remove_item = cloud_method

# SOIL RECIPES
[soil_recipe]
trigger_section:
  has_section = soil_temp

soil_temp:
  apply_defaults = True

# OUTPUT RECIPES
[output_recipe]
trigger_section:
  has_section = output

output:
  apply_defaults = True

# SYSTEM RECIPES
[system_recipe]
trigger_section:
  has_section = system

system:
  apply_defaults = True

[system_threading_recipe]
trigger:
  has_value = [system threading False]

system:
  remove_item = queue_max_values

##################################################
# DATA SECTION RECIPES
##################################################
[csv_recipe]
trigger:
  has_section = csv

csv:
  apply_defaults = true

gridded:
  remove_section = true

thermal:
  remove_item = [distribution detrend detrend_slope grid_method]

air_temp:
  remove_item = zach

[remove_wind_ninja_recipe]
trigger:
  has_section = csv

trigger_wind_interp:
  has_value = [wind wind_model interp]
wind:
  remove_item = [wind_ninja_tz wind_ninja_dir wind_ninja_dxdy wind_ninja_pref wind_ninja_height wind_ninja_roughness]

[gridded_recipe]
trigger:
  has_section = gridded

gridded:
  apply_defaults = true

csv:
  remove_section = true

air_temp:
  distribution = grid

vapor_pressure:
  distribution = grid

wind:
  distribution = grid,
  remove_item = [maxus_netcdf]

precip:
  distribution = grid,
  remove_item = [station_adjust_for_undercatch station_undercatch_model_default]

cloud_factor:
  distribution = grid

thermal:
  distribution = grid

output:
  input_backup = False

[grid_local_recipe]
trigger:
  has_value = [any grid_local True]

any:
  grid_local_n = default

[non_grid_local_recipe]
trigger:
  has_value = [any grid_local False]

any:
  remove_item = grid_local_n

# Gridded Recipes
[wrf_recipe]
trigger:
  has_value = [gridded data_type wrf]

gridded:
    wrf_file = default,
    remove_item = [hrrr_directory netcdf_file hrrr_forecast_flag]

[grib_recipe]
trigger:
  has_value = [gridded data_type hrrr_grib]

gridded:
  remove_item = [wrf_file netcdf_file],
  hrrr_forecast_flag = default

[generic_gridded_nc_recipe]
trigger:
  has_value = [gridded data_type netcdf]

gridded:
  remove_item = [wrf_file hrrr_directory hrrr_forecast_flag hrrr_load_method]

[dk_recipe]
trigger:
  has_value = [any distribution dk]

any:
  dk_ncores = default,
  remove_item = [krig_variogram_model krig_anisotropy_angle
                 krig_anisotropy_scaling krig_nlags krig_weight
                 krig_coordinates_type idw_power grid_mask grid_local grid_method]

[idw_recipe]
trigger:
  has_value = [any distribution idw]

any:
  idw_power = default,
  remove_item = [dk_ncores krig_variogram_model
                 krig_anisotropy_angle krig_anisotropy_scaling krig_nlags
                 krig_weight krig_coordinates_type grid_mask grid_local
                 grid_method]

[krig_recipe]
trigger:
  has_value = [any distribution kriging]

any:
  krig_variogram_model = default,
  krig_anisotropy_angle = default,
  krig_anisotropy_scaling = default,
  krig_nlags = default,
  krig_weight = default,
  krig_coordinates_type = default,
  grid_mask = default

  [gridded_variable_recipe]
  trigger:
      has_value = [any distribution grid]
  any:
      grid_mask = default,
      grid_local = default,
      grid_method = default,
      remove_item = [stations idw_power dk_ncores krig_variogram_model
                     krig_anisotropy_angle krig_anisotropy_scaling krig_nlags
                     krig_weight krig_coordinates_type]


[wind_wind_ninja_recipe]
trigger:
  has_value = [wind wind_model wind_ninja]

wind:
  remove_item = [distribution grid_method grid_local grid_mask grid_local_n]